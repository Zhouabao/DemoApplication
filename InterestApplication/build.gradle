apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao' // apply plugin
apply plugin: 'channel'
android {
    signingConfigs {

        def password = "123456"
        def alias = "key"
//        def alias = "key0"
//        def filePath = "D:/AndroidProjects/FaceSDK-Collect-WithLiveness-Android/facesdk.jks"  //如  ../facesharp.jks//签名文件路径
        def filePath = "C:/Users/Admin/AndroidStudioProjects/DemoApplication/demoapp.jks"  //如  ../facesharp.jks//签名文件路径
//        def filePath = "D:/AndroidProjects/keystorefile/demo.jks"  //如  ../facesharp.jks//签名文件路径


        debug {
            storeFile file(filePath)
            storePassword password
            keyAlias = alias
            keyPassword password
        }
        release {
            storeFile file(filePath)
            storePassword password
            keyAlias = alias
            keyPassword password
        }
    }
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version
    defaultConfig {
        applicationId "com.sdy.jitangapplication"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 7
        versionName "1.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ////版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了
        flavorDimensions "versionCode"
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Umeng"]
        manifestPlaceholders = [qqappid: "1109743471"]
//        manifestPlaceholders = [qqappid: 'com.sdy.jitangapplication']

        // 这里添加
        multiDexEnabled true
        packagingOptions {
            //解决编译时com.android.builder.merge.DuplicateRelativeFileException: More than one file was found with OS independent path 'META-INF/rxjava.properties'这个错误
            exclude 'META-INF/rxjava.properties'
        }
        ndk {
            //设置支持的SO库架构
//            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
            abiFilters "armeabi", "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            //打开混淆
//            minifyEnabled false
            //zipalign优化
//            zipAlignEnabled true
            //移除无用的resource文件
//            shrinkResources true
            signingConfig signingConfigs.release //设置签名信息
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libRSSupport.so'
        pickFirst 'lib/arm64-v8a/libRSSupport.so'
        pickFirst 'lib/x86_64/libRSSupport.so'
        pickFirst 'lib/x86/libRSSupport.so'
        pickFirst 'lib/arm64-v8a/librsjni.so'
        pickFirst 'lib/x86/librsjni.so'
        pickFirst 'lib/x86_64/librsjni.so'
        pickFirst 'lib/armeabi-v7a/librsjni.so'
        pickFirst 'lib/x86_64/librsjni_androidx.so'
        pickFirst 'lib/armeabi-v7a/librsjni_androidx.so'
        pickFirst 'lib/x86/librsjni_androidx.so'
        pickFirst 'lib/arm64-v8a/librsjni_androidx.so'
        exclude 'META-INF/services/javax.annotation.processing.Processor'

    }


    // 渠道包定义，默认定义的名称就是渠道名称
    productFlavors {

        Alpha {}//自己打包测试使用
        Huawei {}//投放华为应用市场
        Oppo {}//投放oppo市场
        Vivo {}//投放vivo市场
        Xiaomi {}//投放小米市场
        M360 {}//投放360市场
        Sougou {}//投放搜狗市场
        Wandoujia {}//投放豌豆荚市场
        Meizu {}//投放魅族市场
        Lenovo {}//投放联想市场
        Anzhi {}//投放安卓智能市场
        Baidu {}//投放百度市场
        PP {}//投放PP助手市场
        Tencent {}//投放应用宝市场
        Yingyonghui {}//投放应用汇市场
        Smartisan {}//投放锤子市场
        Samsung {}//投放三星市场

        //manifestPlaceholders 使用相关的值替换了UMENG_CHANNEL_VALUE
        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }


    // 输出文件配置
    applicationVariants.all { variant ->
        //这个修改输出的APK路径
        variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/app/apk")
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
            //这个修改输出APK的文件名
            apkData.outputFileName = "JITANG-" +
                    variant.versionName + "-" +
                    variant.flavorName + "-" +
                    variant.buildType.name +
                    ".apk"

        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //viewpager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0-alpha01'
    //验证码
//    implementation 'com.github.liuguangli:VerificationCodeInput:1.6'
    //anko
    implementation "org.jetbrains.anko:anko:$anko_version"
    //标签控件
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    //弹窗工具
    implementation 'com.github.cazaea:sweet-alert-dialog:1.0.0'
    //animation集合
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'
    //recyclerview的animation
    implementation 'jp.wasabeef:recyclerview-animators:3.0.0'
    //GreenDao
//    implementation 'ckrjfrog.Page:PageView:1.2.7'
    //年龄选择进度条
    implementation 'com.github.Jay-Goo:RangeSeekBar:v3.0.0'
    implementation 'com.wang.avi:library:2.1.3'
    implementation project(path: ':BaseLibrary')
    //高德地图
    //3D地图so及jar
    implementation 'com.amap.api:map2d:latest.integration'
    //定位功能
    implementation 'com.amap.api:location:latest.integration'
    //搜索功能
    implementation 'com.amap.api:search:latest.integration'
    //卡片模式
    implementation "com.yuyakaido.android:card-stack-view:2.3.4"
    //伸缩的TextView
    implementation 'com.github.MZCretin:ExpandableTextView:v1.6.1'
    //跑马灯
    implementation 'com.github.385841539:MarqueeView:1.0.0'
    //带索引的通讯录
    implementation 'com.github.mcxtzhang:SuspensionIndexBar:V1.0.0'
//    compile 'com.github.nanchen2251:WaveSideBar:1.0.6'
    // 添加依赖。注意，版本号必须一致。
    // 基础功能 (必需)
//    implementation 'com.netease.nimlib:basesdk:6.1.1'

    //云信UI库
    implementation project(path: ':NIM_Android_UIKit-master')
    // 云信推送
//    implementation 'com.netease.nimlib:push:6.8.0'
//    implementation 'com.huawei.android.hms:push:2.6.3.301'
    implementation 'com.huawei.android.hms:base:2.6.3.301'
    implementation 'com.huawei.android.hms:push:2.6.0.301'
    implementation files('libs\\MiPush_SDK_Client_3_6_19.jar')
    implementation files('libs\\nim-push-6.7.0.jar')
    implementation files('libs\\com.coloros.mcssdk.jar')
    implementation files('libs\\pushsdk_v2.3.4.jar')
    implementation 'com.meizu.flyme.internet:push-internal:3.6.3@aar'
    //数美黑产防范
    implementation files('libs\\smantifraud.aar')

    //人脸认证
    implementation project(path: ':faceplatform-ui')
    //bugly
//    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //lottie
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // 添加下面的内容
    implementation(name: 'alipaySdk-15.6.5-20190718211159-noUtdid', ext: 'aar')

    //查看长图
    implementation "com.github.chrisbanes.photoview:library:1.2.4"
    //鲁班压缩
    implementation 'top.zibin:Luban:1.1.8'
    //多渠道打包
    implementation 'com.leon.channel:helper:2.0.3'
    //联动选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    //微信支付
//    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
//    implementation project(path: ':faceplatform')
    // ViewModel and LiveData
//    implementation "android.arch.lifecycle:extensions:1.1.0"
    // Java8 support for Lifecycles
//    implementation "android.arch.lifecycle:common-java8:1.1.0"
    // 音视频需要
//    implementation 'com.netease.nimlib:avchat:6.1.1'

}
